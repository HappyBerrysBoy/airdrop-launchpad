/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Spinner,
  SpinnerInterface,
} from "../../../contracts/SpinnerNew.sol/Spinner";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_totalSegments",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_feeRelayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_countPerKaia",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositKaia",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "segment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SpinResult",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROBABILITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "countPerKaia",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositKaia",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProbabilities",
    outputs: [
      {
        internalType: "uint64[]",
        name: "probabilities",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingAmounts",
    outputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSegmentAmounts",
    outputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "segment",
        type: "uint16",
      },
    ],
    name: "getUserSegmentHits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSegmentHitsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSpinCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSpinsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentAmounts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentProbabilities",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentRemaining",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_countPerKaia",
        type: "uint256",
      },
    ],
    name: "setCountPerKaia",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRelayer",
        type: "address",
      },
    ],
    name: "setFeeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
      {
        internalType: "uint64[]",
        name: "probabilities",
        type: "uint64[]",
      },
    ],
    name: "setSegmentAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_totalSegments",
        type: "uint16",
      },
    ],
    name: "setTotalSegments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spin",
    outputs: [
      {
        internalType: "uint16",
        name: "segment",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSegments",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSpins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userSegmentHits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSpinCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSpinsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d0238038062002d02833981810160405281019062000037919062000286565b60018081905550620000536000801b33620000db60201b60201c565b6000600860006101000a81548160ff02191690831515021790555082600260006101000a81548161ffff021916908361ffff160217905550816002806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050620002e2565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600080fd5b600061ffff82169050919050565b620001c081620001a7565b8114620001cc57600080fd5b50565b600081519050620001e081620001b5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021382620001e6565b9050919050565b620002258162000206565b81146200023157600080fd5b50565b60008151905062000245816200021a565b92915050565b6000819050919050565b62000260816200024b565b81146200026c57600080fd5b50565b600081519050620002808162000255565b92915050565b600080600060608486031215620002a257620002a1620001a2565b5b6000620002b286828701620001cf565b9350506020620002c58682870162000234565b9250506040620002d8868287016200026f565b9150509250925092565b612a1080620002f26000396000f3fe6080604052600436106101e35760003560e01c8063901b203611610102578063cc40a8ca11610095578063f3e6761011610064578063f3e6761014610724578063fae2ac1e1461074f578063fc34173614610778578063fe8e1dc2146107a3576101e3565b8063cc40a8ca14610667578063d547741f14610692578063d96cff32146106bb578063f0acd7d5146106f8576101e3565b8063aaf5eb68116100d1578063aaf5eb68146105bf578063acec338a146105ea578063bc17530a14610613578063bc4af01b1461063c576101e3565b8063901b2036146104f157806391d148541461051c57806395ee121714610559578063a6794c7c14610582576101e3565b806359f96f8e1161017a57806375b238fc1161014957806375b238fc1461042157806379081d9d1461044c5780638acf974d146104895780638ea1f363146104c6576101e3565b806359f96f8e146103725780635f16b5181461037c578063656c0ead146103a75780636cd6e4cf146103e4576101e3565b806321dbc5bf116101b657806321dbc5bf146102b657806322f3e2d4146102f35780632f2ff15d1461031e5780634db33ba214610347576101e3565b8063062f7b8c146101e85780630661939d146102135780631039b1d9146102505780631dc2a4881461028d575b600080fd5b3480156101f457600080fd5b506101fd6107e0565b60405161020a9190611c5b565b60405180910390f35b34801561021f57600080fd5b5061023a60048036038101906102359190611cc1565b6108de565b6040516102479190611cfd565b60405180910390f35b34801561025c57600080fd5b5061027760048036038101906102729190611d76565b610905565b6040516102849190611dbc565b60405180910390f35b34801561029957600080fd5b506102b460048036038101906102af9190611d76565b61094e565b005b3480156102c257600080fd5b506102dd60048036038101906102d89190611cc1565b6109df565b6040516102ea9190611cfd565b60405180910390f35b3480156102ff57600080fd5b50610308610a06565b6040516103159190611df2565b60405180910390f35b34801561032a57600080fd5b5061034560048036038101906103409190611e43565b610a19565b005b34801561035357600080fd5b5061035c610a75565b6040516103699190611dbc565b60405180910390f35b61037a610a7b565b005b34801561038857600080fd5b50610391610bd9565b60405161039e9190611c5b565b60405180910390f35b3480156103b357600080fd5b506103ce60048036038101906103c99190611d76565b610cd7565b6040516103db9190611cfd565b60405180910390f35b3480156103f057600080fd5b5061040b60048036038101906104069190611d76565b610d34565b6040516104189190611cfd565b60405180910390f35b34801561042d57600080fd5b50610436610d5b565b6040516104439190611e92565b60405180910390f35b34801561045857600080fd5b50610473600480360381019061046e9190611d76565b610d62565b6040516104809190611f6b565b60405180910390f35b34801561049557600080fd5b506104b060048036038101906104ab9190611cc1565b610e77565b6040516104bd9190611cfd565b60405180910390f35b3480156104d257600080fd5b506104db610e9e565b6040516104e89190611f9c565b60405180910390f35b3480156104fd57600080fd5b50610506610eb2565b6040516105139190611dbc565b60405180910390f35b34801561052857600080fd5b50610543600480360381019061053e9190611e43565b610eb8565b6040516105509190611df2565b60405180910390f35b34801561056557600080fd5b50610580600480360381019061057b919061201c565b610f1f565b005b34801561058e57600080fd5b506105a960048036038101906105a4919061209d565b6111ad565b6040516105b69190611dbc565b60405180910390f35b3480156105cb57600080fd5b506105d461120c565b6040516105e19190611dbc565b60405180910390f35b3480156105f657600080fd5b50610611600480360381019061060c9190612109565b611218565b005b34801561061f57600080fd5b5061063a60048036038101906106359190611cc1565b611283565b005b34801561064857600080fd5b50610651611338565b60405161065e9190611c5b565b60405180910390f35b34801561067357600080fd5b5061067c611436565b6040516106899190611dbc565b60405180910390f35b34801561069e57600080fd5b506106b960048036038101906106b49190611e43565b61143d565b005b3480156106c757600080fd5b506106e260048036038101906106dd9190611d76565b611499565b6040516106ef9190611dbc565b60405180910390f35b34801561070457600080fd5b5061070d6114b1565b60405161071b929190612136565b60405180910390f35b34801561073057600080fd5b506107396118f4565b6040516107469190611df2565b60405180910390f35b34801561075b57600080fd5b506107766004803603810190610771919061218b565b61190b565b005b34801561078457600080fd5b5061078d611963565b60405161079a91906121c7565b60405180910390f35b3480156107af57600080fd5b506107ca60048036038101906107c591906121e2565b611987565b6040516107d79190611dbc565b60405180910390f35b6060600260009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156108105761080f612222565b5b60405190808252806020026020018201604052801561083e5781602001602082028036833780820191505090505b50905060005b600260009054906101000a900461ffff1661ffff168161ffff1610156108da57600660008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff16815181106108ab576108aa612251565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff16815250508080600101915050610844565b5090565b60046020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b61095c8133610eb8565b61099b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099290612303565b60405180910390fd5b816002806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60066020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600860009054906101000a900460ff1681565b6000801b610a278133610eb8565b610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90612303565b60405180910390fd5b610a7083836119ac565b505050565b60035481565b6001341015610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab690612395565b60405180910390fd5b34600354610acd91906123e4565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1b9190612426565b9250508190555060028054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610b88573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f4509b2a09614c8293787820e24f9f20fc70f381a55440471b3ace0c0edf20a5d34604051610bcf9190611dbc565b60405180910390a2565b6060600260009054906101000a900461ffff1661ffff1667ffffffffffffffff811115610c0957610c08612222565b5b604051908082528060200260200182016040528015610c375781602001602082028036833780820191505090505b50905060005b600260009054906101000a900461ffff1661ffff168161ffff161015610cd357600560008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff1681518110610ca457610ca3612251565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff16815250508080600101915050610c3d565b5090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff169050919050565b600a6020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000801b81565b60606000600260009054906101000a900461ffff1661ffff1667ffffffffffffffff811115610d9457610d93612222565b5b604051908082528060200260200182016040528015610dc25781602001602082028036833780820191505090505b50905060005b600260009054906101000a900461ffff1661ffff168161ffff161015610e6d57600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008261ffff16815260200190815260200160002054828261ffff1681518110610e5457610e53612251565b5b6020026020010181815250508080600101915050610dc8565b5080915050919050565b60056020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600260009054906101000a900461ffff1681565b60075481565b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b610f2d8133610eb8565b610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390612303565b60405180910390fd5b828290508585905014610fb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fab906124a6565b60405180910390fd5b629896808383600186869050610fca91906124c6565b818110610fda57610fd9612251565b5b9050602002016020810190610fef9190612526565b67ffffffffffffffff1614611039576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611030906125c5565b60405180910390fd5b60005b858590508161ffff1610156111a55785858261ffff1681811061106257611061612251565b5b90506020020160208101906110779190612526565b600460008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555085858261ffff168181106110cf576110ce612251565b5b90506020020160208101906110e49190612526565b600560008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083838261ffff1681811061113c5761113b612251565b5b90506020020160208101906111519190612526565b600660008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550808061119d906125e5565b91505061103c565b505050505050565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008361ffff16815260200190815260200160002054905092915050565b670de0b6b3a764000081565b6000801b6112268133610eb8565b611265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125c90612303565b60405180910390fd5b81600860006101000a81548160ff0219169083151502179055505050565b6000801b6112918133610eb8565b6112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c790612303565b60405180910390fd5b60008261ffff1611611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e90612681565b60405180910390fd5b81600260006101000a81548161ffff021916908361ffff1602179055505050565b6060600260009054906101000a900461ffff1661ffff1667ffffffffffffffff81111561136857611367612222565b5b6040519080825280602002602001820160405280156113965781602001602082028036833780820191505090505b50905060005b600260009054906101000a900461ffff1661ffff168161ffff16101561143257600460008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff168151811061140357611402612251565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff1681525050808060010191505061139c565b5090565b6298968081565b6000801b61144b8133610eb8565b61148a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148190612303565b60405180910390fd5b6114948383611a73565b505050565b60096020528060005260406000206000915090505481565b6000806114bc611b3a565b600860009054906101000a900460ff1661150b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611502906126ed565b60405180910390fd5b6000806000601e90505b8215801561152257508082105b1561175f5760016298968042443360075487604051602001611548959493929190612776565b6040516020818303038152906040528051906020012060001c61156b9190612804565b6115759190612426565b935060005b600260009054906101000a900461ffff1661ffff168161ffff1610801561159f575083155b1561174b57600660008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168511611738576000600460008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16148061166557506000600560008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b1561173757600193508095506007600081548092919061168490612835565b91905055506000600560008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16111561173257600560008261ffff1661ffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff168092919061170a9061287d565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505b61174b565b5b8080611743906125e5565b91505061157a565b50818061175790612835565b925050611515565b8261179f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179690612918565b60405180910390fd5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff168092919061180290612938565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008661ffff168152602001908152602001600020600081548092919061188e90612835565b91905055503373ffffffffffffffffffffffffffffffffffffffff167ff825702cbc83605d7fababea4c41c307150aab23ae229acda80af9d946aa42928686426040516118dd939291906129a3565b60405180910390a25050506118f0611b80565b9091565b6000600860009054906101000a900460ff16905090565b6000801b6119198133610eb8565b611958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194f90612303565b60405180910390fd5b816003819055505050565b60028054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b602052816000526040600020602052806000526040600020600091509150505481565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600260015403611b76576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600067ffffffffffffffff82169050919050565b611bd281611bb5565b82525050565b6000611be48383611bc9565b60208301905092915050565b6000602082019050919050565b6000611c0882611b89565b611c128185611b94565b9350611c1d83611ba5565b8060005b83811015611c4e578151611c358882611bd8565b9750611c4083611bf0565b925050600181019050611c21565b5085935050505092915050565b60006020820190508181036000830152611c758184611bfd565b905092915050565b600080fd5b600080fd5b600061ffff82169050919050565b611c9e81611c87565b8114611ca957600080fd5b50565b600081359050611cbb81611c95565b92915050565b600060208284031215611cd757611cd6611c7d565b5b6000611ce584828501611cac565b91505092915050565b611cf781611bb5565b82525050565b6000602082019050611d126000830184611cee565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4382611d18565b9050919050565b611d5381611d38565b8114611d5e57600080fd5b50565b600081359050611d7081611d4a565b92915050565b600060208284031215611d8c57611d8b611c7d565b5b6000611d9a84828501611d61565b91505092915050565b6000819050919050565b611db681611da3565b82525050565b6000602082019050611dd16000830184611dad565b92915050565b60008115159050919050565b611dec81611dd7565b82525050565b6000602082019050611e076000830184611de3565b92915050565b6000819050919050565b611e2081611e0d565b8114611e2b57600080fd5b50565b600081359050611e3d81611e17565b92915050565b60008060408385031215611e5a57611e59611c7d565b5b6000611e6885828601611e2e565b9250506020611e7985828601611d61565b9150509250929050565b611e8c81611e0d565b82525050565b6000602082019050611ea76000830184611e83565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ee281611da3565b82525050565b6000611ef48383611ed9565b60208301905092915050565b6000602082019050919050565b6000611f1882611ead565b611f228185611eb8565b9350611f2d83611ec9565b8060005b83811015611f5e578151611f458882611ee8565b9750611f5083611f00565b925050600181019050611f31565b5085935050505092915050565b60006020820190508181036000830152611f858184611f0d565b905092915050565b611f9681611c87565b82525050565b6000602082019050611fb16000830184611f8d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611fdc57611fdb611fb7565b5b8235905067ffffffffffffffff811115611ff957611ff8611fbc565b5b60208301915083602082028301111561201557612014611fc1565b5b9250929050565b6000806000806040858703121561203657612035611c7d565b5b600085013567ffffffffffffffff81111561205457612053611c82565b5b61206087828801611fc6565b9450945050602085013567ffffffffffffffff81111561208357612082611c82565b5b61208f87828801611fc6565b925092505092959194509250565b600080604083850312156120b4576120b3611c7d565b5b60006120c285828601611d61565b92505060206120d385828601611cac565b9150509250929050565b6120e681611dd7565b81146120f157600080fd5b50565b600081359050612103816120dd565b92915050565b60006020828403121561211f5761211e611c7d565b5b600061212d848285016120f4565b91505092915050565b600060408201905061214b6000830185611f8d565b6121586020830184611dad565b9392505050565b61216881611da3565b811461217357600080fd5b50565b6000813590506121858161215f565b92915050565b6000602082840312156121a1576121a0611c7d565b5b60006121af84828501612176565b91505092915050565b6121c181611d38565b82525050565b60006020820190506121dc60008301846121b8565b92915050565b600080604083850312156121f9576121f8611c7d565b5b600061220785828601611d61565b925050602061221885828601612176565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420686176652060008201527f7468652061646d696e20726f6c65000000000000000000000000000000000000602082015250565b60006122ed602e83612280565b91506122f882612291565b604082019050919050565b6000602082019050818103600083015261231c816122e0565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b600061237f602583612280565b915061238a82612323565b604082019050919050565b600060208201905081810360008301526123ae81612372565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ef82611da3565b91506123fa83611da3565b925082820261240881611da3565b9150828204841483151761241f5761241e6123b5565b5b5092915050565b600061243182611da3565b915061243c83611da3565b9250828201905080821115612454576124536123b5565b5b92915050565b7f4c656e677468206d69736d617463680000000000000000000000000000000000600082015250565b6000612490600f83612280565b915061249b8261245a565b602082019050919050565b600060208201905081810360008301526124bf81612483565b9050919050565b60006124d182611da3565b91506124dc83611da3565b92508282039050818111156124f4576124f36123b5565b5b92915050565b61250381611bb5565b811461250e57600080fd5b50565b600081359050612520816124fa565b92915050565b60006020828403121561253c5761253b611c7d565b5b600061254a84828501612511565b91505092915050565b7f4c6173742070726f626162696c697479206d757374206265203130303030303060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b60006125af602183612280565b91506125ba82612553565b604082019050919050565b600060208201905081810360008301526125de816125a2565b9050919050565b60006125f082611c87565b915061ffff8203612604576126036123b5565b5b600182019050919050565b7f546f74616c207365676d656e7473206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b600061266b602583612280565b91506126768261260f565b604082019050919050565b6000602082019050818103600083015261269a8161265e565b9050919050565b7f5370696e6e6572206e6f74206163746976650000000000000000000000000000600082015250565b60006126d7601283612280565b91506126e2826126a1565b602082019050919050565b60006020820190508181036000830152612706816126ca565b9050919050565b6000819050919050565b61272861272382611da3565b61270d565b82525050565b60008160601b9050919050565b60006127468261272e565b9050919050565b60006127588261273b565b9050919050565b61277061276b82611d38565b61274d565b82525050565b60006127828288612717565b6020820191506127928287612717565b6020820191506127a2828661275f565b6014820191506127b28285612717565b6020820191506127c28284612717565b6020820191508190509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061280f82611da3565b915061281a83611da3565b92508261282a576128296127d5565b5b828206905092915050565b600061284082611da3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612872576128716123b5565b5b600182019050919050565b600061288882611bb5565b91506000820361289b5761289a6123b5565b5b600182039050919050565b7f4e6f2076616c6964207365676d656e747320617661696c61626c65206166746560008201527f7220333020617474656d70747300000000000000000000000000000000000000602082015250565b6000612902602d83612280565b915061290d826128a6565b604082019050919050565b60006020820190508181036000830152612931816128f5565b9050919050565b600061294382611bb5565b915067ffffffffffffffff820361295d5761295c6123b5565b5b600182019050919050565b6000819050919050565b600061298d61298861298384611c87565b612968565b611da3565b9050919050565b61299d81612972565b82525050565b60006060820190506129b86000830186612994565b6129c56020830185611dad565b6129d26040830184611dad565b94935050505056fea26469706673582212204311876ae910fc37aaff322fec4131f9ef2dbc1f5648e3b52af2df66ae96659c64736f6c63430008180033";

type SpinnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpinnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Spinner__factory extends ContractFactory {
  constructor(...args: SpinnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _totalSegments: BigNumberish,
    _feeRelayer: AddressLike,
    _countPerKaia: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _totalSegments,
      _feeRelayer,
      _countPerKaia,
      overrides || {}
    );
  }
  override deploy(
    _totalSegments: BigNumberish,
    _feeRelayer: AddressLike,
    _countPerKaia: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _totalSegments,
      _feeRelayer,
      _countPerKaia,
      overrides || {}
    ) as Promise<
      Spinner & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Spinner__factory {
    return super.connect(runner) as Spinner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpinnerInterface {
    return new Interface(_abi) as SpinnerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Spinner {
    return new Contract(address, _abi, runner) as unknown as Spinner;
  }
}
