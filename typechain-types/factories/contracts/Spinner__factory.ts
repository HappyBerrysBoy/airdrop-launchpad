/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Spinner, SpinnerInterface } from "../../contracts/Spinner";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_totalSegments",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_feeRelayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_countPerKaia",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RechargeSpins",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "segment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SpinResult",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROBABILITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "countPerKaia",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSpinPerDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getLastRechargeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProbabilities",
    outputs: [
      {
        internalType: "uint64[]",
        name: "probabilities",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingAmounts",
    outputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSegmentAmounts",
    outputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "segment",
        type: "uint16",
      },
    ],
    name: "getUserSegmentHits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSegmentHitsAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSpinCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSpinsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRechargeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rechargeBlockInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "rechargeSpins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentAmounts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentProbabilities",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "segmentRemaining",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endBlock",
        type: "uint256",
      },
    ],
    name: "setBlockRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_countPerKaia",
        type: "uint256",
      },
    ],
    name: "setCountPerKaia",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRelayer",
        type: "address",
      },
    ],
    name: "setFeeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeSpinsPerDay",
        type: "uint256",
      },
    ],
    name: "setFreeSpinsPerDay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rechargeBlockInterval",
        type: "uint256",
      },
    ],
    name: "setRechargeBlockInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "amounts",
        type: "uint64[]",
      },
      {
        internalType: "uint64[]",
        name: "probabilities",
        type: "uint64[]",
      },
    ],
    name: "setSegmentAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_totalSegments",
        type: "uint16",
      },
    ],
    name: "setTotalSegments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spin",
    outputs: [
      {
        internalType: "uint16",
        name: "segment",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSegments",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSpins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userSegmentHits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSpinCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSpinsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526064600255620151806003553480156200001d57600080fd5b506040516200322838038062003228833981810160405281019062000043919062000288565b600180819055506200005f6000801b33620000dd60201b60201c565b82600460006101000a81548161ffff021916908361ffff16021790555081600460026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055506000600a819055506000600b81905550505050620002e4565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600080fd5b600061ffff82169050919050565b620001c281620001a9565b8114620001ce57600080fd5b50565b600081519050620001e281620001b7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021582620001e8565b9050919050565b620002278162000208565b81146200023357600080fd5b50565b60008151905062000247816200021c565b92915050565b6000819050919050565b62000262816200024d565b81146200026e57600080fd5b50565b600081519050620002828162000257565b92915050565b600080600060608486031215620002a457620002a3620001a4565b5b6000620002b486828701620001d1565b9350506020620002c78682870162000236565b9250506040620002da8682870162000271565b9150509250925092565b612f3480620002f46000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806379081d9d1161013b578063bc17530a116100b8578063eb9c9d9b1161007c578063eb9c9d9b14610707578063f0acd7d514610723578063fae2ac1e14610742578063fc3417361461075e578063fe8e1dc21461077c5761023d565b8063bc17530a14610663578063bc4af01b1461067f578063cc40a8ca1461069d578063d547741f146106bb578063d96cff32146106d75761023d565b806391d14854116100ff57806391d14854146105ad57806392eefe2b146105dd57806395ee1217146105f9578063a6794c7c14610615578063aaf5eb68146106455761023d565b806379081d9d146104e15780637cd0fa5c146105115780638acf974d146105415780638ea1f36314610571578063901b20361461058f5761023d565b80633cb85a8d116101c9578063656c0ead1161018d578063656c0ead146104165780636a5acd6b146104465780636cd6e4cf146104775780636ef45e7d146104a757806375b238fc146104c35761023d565b80633cb85a8d1461038057806348cd4cb11461039e5780634db33ba2146103bc57806350211e75146103da5780635f16b518146103f85761023d565b8063150095eb11610210578063150095eb146102de5780631dc2a488146102fa57806321dbc5bf1461031657806322f3e2d4146103465780632f2ff15d146103645761023d565b8063062f7b8c146102425780630661939d14610260578063083c6323146102905780631039b1d9146102ae575b600080fd5b61024a6107ac565b6040516102579190611f66565b60405180910390f35b61027a60048036038101906102759190611fcc565b6108aa565b6040516102879190612008565b60405180910390f35b6102986108d1565b6040516102a5919061203c565b60405180910390f35b6102c860048036038101906102c391906120b5565b6108d7565b6040516102d5919061203c565b60405180910390f35b6102f860048036038101906102f3919061210e565b610920565b005b610314600480360381019061030f91906120b5565b610978565b005b610330600480360381019061032b9190611fcc565b610a0a565b60405161033d9190612008565b60405180910390f35b61034e610a31565b60405161035b9190612156565b60405180910390f35b61037e600480360381019061037991906121a7565b610a67565b005b610388610ac3565b604051610395919061203c565b60405180910390f35b6103a6610ac9565b6040516103b3919061203c565b60405180910390f35b6103c4610acf565b6040516103d1919061203c565b60405180910390f35b6103e2610ad5565b6040516103ef919061203c565b60405180910390f35b610400610adb565b60405161040d9190611f66565b60405180910390f35b610430600480360381019061042b91906120b5565b610bd9565b60405161043d9190612008565b60405180910390f35b610460600480360381019061045b91906120b5565b610c36565b60405161046e9291906121e7565b60405180910390f35b610491600480360381019061048c91906120b5565b610c83565b60405161049e9190612008565b60405180910390f35b6104c160048036038101906104bc9190612210565b610caa565b005b6104cb610d9a565b6040516104d8919061225f565b60405180910390f35b6104fb60048036038101906104f691906120b5565b610da1565b6040516105089190612338565b60405180910390f35b61052b600480360381019061052691906120b5565b610eb6565b604051610538919061203c565b60405180910390f35b61055b60048036038101906105569190611fcc565b610ece565b6040516105689190612008565b60405180910390f35b610579610ef5565b6040516105869190612369565b60405180910390f35b610597610f09565b6040516105a4919061203c565b60405180910390f35b6105c760048036038101906105c291906121a7565b610f0f565b6040516105d49190612156565b60405180910390f35b6105f760048036038101906105f2919061210e565b610f76565b005b610613600480360381019061060e91906123e9565b610fce565b005b61062f600480360381019061062a919061246a565b61125d565b60405161063c919061203c565b60405180910390f35b61064d6112bc565b60405161065a919061203c565b60405180910390f35b61067d60048036038101906106789190611fcc565b6112c8565b005b61068761137d565b6040516106949190611f66565b60405180910390f35b6106a561147b565b6040516106b2919061203c565b60405180910390f35b6106d560048036038101906106d091906121a7565b611483565b005b6106f160048036038101906106ec91906120b5565b6114df565b6040516106fe919061203c565b60405180910390f35b610721600480360381019061071c91906120b5565b6114f7565b005b61072b611701565b6040516107399291906124aa565b60405180910390f35b61075c6004803603810190610757919061210e565b611c14565b005b610766611c6c565b60405161077391906124e2565b60405180910390f35b610796600480360381019061079191906124fd565b611c92565b6040516107a3919061203c565b60405180910390f35b6060600460009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156107dc576107db61253d565b5b60405190808252806020026020018201604052801561080a5781602001602082028036833780820191505090505b50905060005b600460009054906101000a900461ffff1661ffff168161ffff1610156108a657600860008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff16815181106108775761087661256c565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff16815250508080600101915050610810565b5090565b60066020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600b5481565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000801b61092e8133610f0f565b61096d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109649061261e565b60405180910390fd5b816002819055505050565b6000801b6109868133610f0f565b6109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc9061261e565b60405180910390fd5b81600460026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600080600a5414158015610a475750600a544310155b8015610a6257506000600b541480610a615750600b544311155b5b905090565b6000801b610a758133610f0f565b610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab9061261e565b60405180910390fd5b610abe8383611cb7565b505050565b60035481565b600a5481565b60055481565b60025481565b6060600460009054906101000a900461ffff1661ffff1667ffffffffffffffff811115610b0b57610b0a61253d565b5b604051908082528060200260200182016040528015610b395781602001602082028036833780820191505090505b50905060005b600460009054906101000a900461ffff1661ffff168161ffff161015610bd557600760008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff1681518110610ba657610ba561256c565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff16815250508080600101915050610b3f565b5090565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff169050919050565b600080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544391509150915091565b600e6020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b6000801b610cb88133610f0f565b610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee9061261e565b60405180910390fd5b43831015610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d31906126b0565b60405180910390fd5b6000821480610d4857508282115b610d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7e90612742565b60405180910390fd5b82600a8190555081600b81905550505050565b6000801b81565b60606000600460009054906101000a900461ffff1661ffff1667ffffffffffffffff811115610dd357610dd261253d565b5b604051908082528060200260200182016040528015610e015781602001602082028036833780820191505090505b50905060005b600460009054906101000a900461ffff1661ffff168161ffff161015610eac57600f60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008261ffff16815260200190815260200160002054828261ffff1681518110610e9357610e9261256c565b5b6020026020010181815250508080600101915050610e07565b5080915050919050565b600c6020528060005260406000206000915090505481565b60076020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600460009054906101000a900461ffff1681565b60095481565b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b610f848133610f0f565b610fc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fba9061261e565b60405180910390fd5b816003819055505050565b6000801b610fdc8133610f0f565b61101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110129061261e565b60405180910390fd5b828290508585905014611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a906127ae565b60405180910390fd5b6305f5e100838360018686905061107a91906127fd565b81811061108a5761108961256c565b5b905060200201602081019061109f919061285d565b67ffffffffffffffff16146110e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e0906128fc565b60405180910390fd5b60005b858590508161ffff1610156112555785858261ffff168181106111125761111161256c565b5b9050602002016020810190611127919061285d565b600660008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555085858261ffff1681811061117f5761117e61256c565b5b9050602002016020810190611194919061285d565b600760008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083838261ffff168181106111ec576111eb61256c565b5b9050602002016020810190611201919061285d565b600860008361ffff1661ffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550808061124d9061291c565b9150506110ec565b505050505050565b6000600f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008361ffff16815260200190815260200160002054905092915050565b670de0b6b3a764000081565b6000801b6112d68133610f0f565b611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c9061261e565b60405180910390fd5b60008261ffff161161135c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611353906129b8565b60405180910390fd5b81600460006101000a81548161ffff021916908361ffff1602179055505050565b6060600460009054906101000a900461ffff1661ffff1667ffffffffffffffff8111156113ad576113ac61253d565b5b6040519080825280602002602001820160405280156113db5781602001602082028036833780820191505090505b50905060005b600460009054906101000a900461ffff1661ffff168161ffff16101561147757600660008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16828261ffff16815181106114485761144761256c565b5b602002602001019067ffffffffffffffff16908167ffffffffffffffff168152505080806001019150506113e1565b5090565b6305f5e10081565b6000801b6114918133610f0f565b6114d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c79061261e565b60405180910390fd5b6114da8383611d7e565b505050565b600d6020528060005260406000206000915090505481565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061153a57506115396000801b33610f0f565b5b611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157090612a4a565b60405180910390fd5b60004390506000600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826115cb91906127fd565b9050600354811015611612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160990612adc565b60405180910390fd5b600254600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116639190612afc565b9250508190555081600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167fb12ec13040779b0b4e7d608b32399fbcfb5c1ab5fb2cc08226d4ed2a32728b3e836040516116f4919061203c565b60405180910390a2505050565b60008061170c611e45565b611714610a31565b611753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174a90612b7c565b60405180910390fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116117d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cc90612be8565b60405180910390fd5b6000806000601e90505b821580156117ec57508082105b15611a2a5760016305f5e10042443360095487604051602001611813959493929190612c71565b6040516020818303038152906040528051906020012060001c6118369190612cff565b6118409190612afc565b935060005b600460009054906101000a900461ffff1661ffff168161ffff1610801561186a575083155b15611a1657600860008261ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168511611a03576000600660008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16148061193057506000600760008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b15611a0257600193508095506009600081548092919061194f90612d30565b91905055506000600760008361ffff1661ffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611156119fd57600760008261ffff1661ffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff16809291906119d590612d78565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505b611a16565b5b8080611a0e9061291c565b915050611845565b508180611a2290612d30565b9250506117df565b82611a6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6190612e13565b60405180910390fd5b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff1680929190611acd90612e33565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008661ffff1681526020019081526020016000206000815480929190611b5990612d30565b9190505550600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611bae90612e63565b91905055503373ffffffffffffffffffffffffffffffffffffffff167ff825702cbc83605d7fababea4c41c307150aab23ae229acda80af9d946aa4292868642604051611bfd93929190612ec7565b60405180910390a2505050611c10611e8b565b9091565b6000801b611c228133610f0f565b611c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c589061261e565b60405180910390fd5b816005819055505050565b600460029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f602052816000526040600020602052806000526040600020600091509150505481565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600260015403611e81576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600067ffffffffffffffff82169050919050565b611edd81611ec0565b82525050565b6000611eef8383611ed4565b60208301905092915050565b6000602082019050919050565b6000611f1382611e94565b611f1d8185611e9f565b9350611f2883611eb0565b8060005b83811015611f59578151611f408882611ee3565b9750611f4b83611efb565b925050600181019050611f2c565b5085935050505092915050565b60006020820190508181036000830152611f808184611f08565b905092915050565b600080fd5b600080fd5b600061ffff82169050919050565b611fa981611f92565b8114611fb457600080fd5b50565b600081359050611fc681611fa0565b92915050565b600060208284031215611fe257611fe1611f88565b5b6000611ff084828501611fb7565b91505092915050565b61200281611ec0565b82525050565b600060208201905061201d6000830184611ff9565b92915050565b6000819050919050565b61203681612023565b82525050565b6000602082019050612051600083018461202d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061208282612057565b9050919050565b61209281612077565b811461209d57600080fd5b50565b6000813590506120af81612089565b92915050565b6000602082840312156120cb576120ca611f88565b5b60006120d9848285016120a0565b91505092915050565b6120eb81612023565b81146120f657600080fd5b50565b600081359050612108816120e2565b92915050565b60006020828403121561212457612123611f88565b5b6000612132848285016120f9565b91505092915050565b60008115159050919050565b6121508161213b565b82525050565b600060208201905061216b6000830184612147565b92915050565b6000819050919050565b61218481612171565b811461218f57600080fd5b50565b6000813590506121a18161217b565b92915050565b600080604083850312156121be576121bd611f88565b5b60006121cc85828601612192565b92505060206121dd858286016120a0565b9150509250929050565b60006040820190506121fc600083018561202d565b612209602083018461202d565b9392505050565b6000806040838503121561222757612226611f88565b5b6000612235858286016120f9565b9250506020612246858286016120f9565b9150509250929050565b61225981612171565b82525050565b60006020820190506122746000830184612250565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6122af81612023565b82525050565b60006122c183836122a6565b60208301905092915050565b6000602082019050919050565b60006122e58261227a565b6122ef8185612285565b93506122fa83612296565b8060005b8381101561232b57815161231288826122b5565b975061231d836122cd565b9250506001810190506122fe565b5085935050505092915050565b6000602082019050818103600083015261235281846122da565b905092915050565b61236381611f92565b82525050565b600060208201905061237e600083018461235a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123a9576123a8612384565b5b8235905067ffffffffffffffff8111156123c6576123c5612389565b5b6020830191508360208202830111156123e2576123e161238e565b5b9250929050565b6000806000806040858703121561240357612402611f88565b5b600085013567ffffffffffffffff81111561242157612420611f8d565b5b61242d87828801612393565b9450945050602085013567ffffffffffffffff8111156124505761244f611f8d565b5b61245c87828801612393565b925092505092959194509250565b6000806040838503121561248157612480611f88565b5b600061248f858286016120a0565b92505060206124a085828601611fb7565b9150509250929050565b60006040820190506124bf600083018561235a565b6124cc602083018461202d565b9392505050565b6124dc81612077565b82525050565b60006020820190506124f760008301846124d3565b92915050565b6000806040838503121561251457612513611f88565b5b6000612522858286016120a0565b9250506020612533858286016120f9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2073656e646572206d75737420686176652060008201527f7468652061646d696e20726f6c65000000000000000000000000000000000000602082015250565b6000612608602e8361259b565b9150612613826125ac565b604082019050919050565b60006020820190508181036000830152612637816125fb565b9050919050565b7f537461727420626c6f636b206d75737420626520696e2074686520667574757260008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061269a60218361259b565b91506126a58261263e565b604082019050919050565b600060208201905081810360008301526126c98161268d565b9050919050565b7f456e6420626c6f636b206d75737420626520616674657220737461727420626c60008201527f6f636b0000000000000000000000000000000000000000000000000000000000602082015250565b600061272c60238361259b565b9150612737826126d0565b604082019050919050565b6000602082019050818103600083015261275b8161271f565b9050919050565b7f4c656e677468206d69736d617463680000000000000000000000000000000000600082015250565b6000612798600f8361259b565b91506127a382612762565b602082019050919050565b600060208201905081810360008301526127c78161278b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061280882612023565b915061281383612023565b925082820390508181111561282b5761282a6127ce565b5b92915050565b61283a81611ec0565b811461284557600080fd5b50565b60008135905061285781612831565b92915050565b60006020828403121561287357612872611f88565b5b600061288184828501612848565b91505092915050565b7f4c6173742070726f626162696c697479206d757374206265203130303030303060008201527f3030000000000000000000000000000000000000000000000000000000000000602082015250565b60006128e660228361259b565b91506128f18261288a565b604082019050919050565b60006020820190508181036000830152612915816128d9565b9050919050565b600061292782611f92565b915061ffff820361293b5761293a6127ce565b5b600182019050919050565b7f546f74616c207365676d656e7473206d7573742062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b60006129a260258361259b565b91506129ad82612946565b604082019050919050565b600060208201905081810360008301526129d181612995565b9050919050565b7f4f6e6c792075736572206f722061646d696e2063616e2072656368617267652060008201527f7370696e73000000000000000000000000000000000000000000000000000000602082015250565b6000612a3460258361259b565b9150612a3f826129d8565b604082019050919050565b60006020820190508181036000830152612a6381612a27565b9050919050565b7f4e6f7420656e6f7567682074696d6520686173207061737365642073696e636560008201527f206c617374207265636861726765000000000000000000000000000000000000602082015250565b6000612ac6602e8361259b565b9150612ad182612a6a565b604082019050919050565b60006020820190508181036000830152612af581612ab9565b9050919050565b6000612b0782612023565b9150612b1283612023565b9250828201905080821115612b2a57612b296127ce565b5b92915050565b7f5370696e6e6572206e6f74206163746976650000000000000000000000000000600082015250565b6000612b6660128361259b565b9150612b7182612b30565b602082019050919050565b60006020820190508181036000830152612b9581612b59565b9050919050565b7f4e6f207370696e7320617661696c61626c650000000000000000000000000000600082015250565b6000612bd260128361259b565b9150612bdd82612b9c565b602082019050919050565b60006020820190508181036000830152612c0181612bc5565b9050919050565b6000819050919050565b612c23612c1e82612023565b612c08565b82525050565b60008160601b9050919050565b6000612c4182612c29565b9050919050565b6000612c5382612c36565b9050919050565b612c6b612c6682612077565b612c48565b82525050565b6000612c7d8288612c12565b602082019150612c8d8287612c12565b602082019150612c9d8286612c5a565b601482019150612cad8285612c12565b602082019150612cbd8284612c12565b6020820191508190509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612d0a82612023565b9150612d1583612023565b925082612d2557612d24612cd0565b5b828206905092915050565b6000612d3b82612023565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d6d57612d6c6127ce565b5b600182019050919050565b6000612d8382611ec0565b915060008203612d9657612d956127ce565b5b600182039050919050565b7f4e6f2076616c6964207365676d656e747320617661696c61626c65206166746560008201527f7220333020617474656d70747300000000000000000000000000000000000000602082015250565b6000612dfd602d8361259b565b9150612e0882612da1565b604082019050919050565b60006020820190508181036000830152612e2c81612df0565b9050919050565b6000612e3e82611ec0565b915067ffffffffffffffff8203612e5857612e576127ce565b5b600182019050919050565b6000612e6e82612023565b915060008203612e8157612e806127ce565b5b600182039050919050565b6000819050919050565b6000612eb1612eac612ea784611f92565b612e8c565b612023565b9050919050565b612ec181612e96565b82525050565b6000606082019050612edc6000830186612eb8565b612ee9602083018561202d565b612ef6604083018461202d565b94935050505056fea2646970667358221220880043fd0ed90b4e9c7684312aa308b30356ec0665ef70958d5d86990a0dbfa764736f6c63430008180033";

type SpinnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpinnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Spinner__factory extends ContractFactory {
  constructor(...args: SpinnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _totalSegments: BigNumberish,
    _feeRelayer: AddressLike,
    _countPerKaia: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _totalSegments,
      _feeRelayer,
      _countPerKaia,
      overrides || {}
    );
  }
  override deploy(
    _totalSegments: BigNumberish,
    _feeRelayer: AddressLike,
    _countPerKaia: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _totalSegments,
      _feeRelayer,
      _countPerKaia,
      overrides || {}
    ) as Promise<
      Spinner & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Spinner__factory {
    return super.connect(runner) as Spinner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpinnerInterface {
    return new Interface(_abi) as SpinnerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Spinner {
    return new Contract(address, _abi, runner) as unknown as Spinner;
  }
}
